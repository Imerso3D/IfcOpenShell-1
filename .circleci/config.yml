version: 2
.conan-environment: &conan-environment
    CONAN_USERNAME: "circleci"
    CONAN_CPU_COUNT: 4
    PACKAGE_NAME: "ifcopenshell"
    IMERSO_CONAN_CONFIG_VERSION: 0.0.17

.conan-steps: &conan-steps
  steps:
    - run:
        name: Install git
        command: |
          apt-get update
          apt-get install -y openssh-client git
    - checkout
    - run:
        name: Setup requirements
        command: |
          apt-get install -y python3-dev python3-pip curl libssl1.0.0 libssl-dev wget ccache
          wget https://github.com/Kitware/CMake/releases/download/v3.14.3/cmake-3.14.3-Linux-x86_64.tar.gz
          tar zxvf cmake-3.14.3-Linux-x86_64.tar.gz -C /opt
          rm cmake-3.14.3-Linux-x86_64.tar.gz
          ln -sf /opt/cmake-3.14.3-Linux-x86_64/bin/cmake /usr/local/bin/cmake
          ln -sf /opt/cmake-3.14.3-Linux-x86_64/bin/ctest /usr/local/bin/ctest

          curl -fL https://getcli.jfrog.io | sh
          ./jfrog rt config imerso-artifactory\
            --access-token="$CONAN_PASSWORD"\
            --url="https://imerso.jfrog.io/imerso"

          ./jfrog rt download\
            --server-id=imerso-artifactory\
            --flat\
            generic-local/imerso/conan-config/conan-config-$IMERSO_CONAN_CONFIG_VERSION.zip\
            /tmp/conan-config.zip

          python3 -m pip install conan==1.17.2
          conan config install /tmp/conan-config.zip
          conan user -r conan-imerso $CONAN_USERNAME

          python3 -m pip install dohq-artifactory GitPython inflection

          apt-get install -y locales
          sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
          dpkg-reconfigure --frontend=noninteractive locales
          update-locale LANG=en_US.UTF-8
          echo "LANG=en_US.UTF-8" >> $BASH_ENV

          if [[ "$PROFILE" == "gcc8_ubuntu" ]];
          then
            apt-get install -y g++-8
          fi

          if [[ "$PROFILE" == "clang7_ubuntu" ]];
          then
            apt-get install -y clang-7 clang-tidy-7 clang-format-7 libc++1-7 libclang-7-dev libc++-7-dev libc++1-7 g++-8
            git clone https://github.com/include-what-you-use/include-what-you-use.git
            cd include-what-you-use
            git checkout clang_7.0
            mkdir build
            cd build
            cmake -DCMAKE_CXX_COMPILER=/usr/bin/clang++-7 -DCMAKE_C_COMPILER=/usr/bin/clang-7 -DIWYU_LLVM_ROOT_PATH=/usr/lib/llvm-7 -DCMAKE_BUILD_TYPE=Release ..
            make -j
            make install
            cd ../..
            rm -rf include-what-you-use
          fi
    - run:
        name: Setup channel and package version
        command: |
          echo "export CONAN_CHANNEL=$CIRCLE_BRANCH" >> $BASH_ENV
          echo "export PACKAGE_VERSION=$(git rev-parse --verify HEAD)" >> $BASH_ENV
    - run:
        name: Create package
        no_output_timeout: 1h
        command: |
          CTEST_OUTPUT_ON_FAILURE=1 conan create . "$PACKAGE_NAME/$PACKAGE_VERSION@imerso/$CONAN_CHANNEL"\
            --test-build-folder test_build_folder\
            --profile $PROFILE\
            --build=missing
    - run:
        name: Upload package if release
        command: |
          echo "conan upload $PACKAGE_NAME/$PACKAGE_VERSION@imerso/$CONAN_CHANNEL"
          if [[ "$CONAN_CHANNEL" == "master" ]];
          then
            conan upload "$PACKAGE_NAME/$PACKAGE_VERSION@imerso/$CONAN_CHANNEL"\
              --all\
              -r conan-imerso
          fi

jobs:
  gcc-8:
    docker:
      - image: ubuntu:18.04
    environment:
      PROFILE: "gcc8_ubuntu"
      <<: *conan-environment
    <<: *conan-steps

  clang-7:
    docker:
      - image: ubuntu:18.04
    environment:
      PROFILE: "clang7_ubuntu"
      <<: *conan-environment
    <<: *conan-steps

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - gcc-8
      - clang-7
